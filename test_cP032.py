# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
import pandas as pd

class TestCP032buscar():
    def setup_method(self):
        self.driver = webdriver.Chrome()
        self.vars = {}

    def teardown_method(self):
        self.driver.quit()

    def test_cP032buscar(self):
        # Test name: CP03-2 buscar
        # Step # | name | target | value
        # 1 | open | / |
        self.driver.get("https://tucan.toolsincloud.net/")
        # 2 | setWindowSize | 1382x744 |
        self.driver.set_window_size(1382, 744)
        # 3 | click | name=email |
        data = pd.read_csv("cp03-2.csv")
        for name in data['Name']:
            self.driver.find_element(By.NAME, "email").click()
            # 4 | type | name=email | predeterminado.username@gmail.com
            self.driver.find_element(By.NAME, "email").send_keys("predeterminado.username@gmail.com")
            # 5 | click | name=password |
            self.driver.find_element(By.NAME, "password").click()
            # 6 | type | name=password | clave123
            self.driver.find_element(By.NAME, "password").send_keys("clave123")
            # 7 | sendKeys | name=password | ${KEY_ENTER}
            self.driver.find_element(By.NAME, "password").send_keys(Keys.ENTER)
       
            # 8 | click | css=.form-control |
            self.driver.find_element(By.CSS_SELECTOR, ".form-control").click()
            # 9 | type | css=.form-control | Elon Musk
            self.driver.find_element(By.CSS_SELECTOR, ".form-control").send_keys(name)
            # 10 | sendKeys | css=.form-control | ${KEY_ENTER}
            self.driver.find_element(By.CSS_SELECTOR, ".form-control").send_keys(Keys.ENTER)
            # 11 | click | id=icon-search |
            self.driver.find_element(By.ID, "icon-search").click()
            # 12 | click | css=.grid-sidebar:nth-child(11) strong |
            self.driver.find_element(By.CSS_SELECTOR, ".grid-sidebar:nth-child(11) strong").click()
            time.sleep(2) # esperar a que se cargue la página
            self.driver.back() # volver a la página de búsqueda
            time.sleep(2) # esperar a que se cargue la página de búsqueda

        # cerrar la ventana del navegador después de procesar todos los nombres
        self.driver.close()

        print("Ejecucion completa para todos los nombres")

test = TestCP032buscar()
test.setup_method()
test.test_cP032buscar()
  
